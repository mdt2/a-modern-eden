'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ns = ns;

var _ramda = require('ramda');

var concat = _ramda.concat;
var join = _ramda.join;
var map = _ramda.map;
var pipe = _ramda.pipe;
var split = _ramda.split;
var trim = _ramda.trim;


/**
 * Prefix every word in string with a namespace.
 *
 * The prefix (default: `ns-`) can be supplied as an option globally, or as an
 * argument when using the helper. This is intended to be used with HTML
 * attribute values, such as `[class]`.
 *
 * @example
 * <div class="{{ns "One Two"}}">
 * {{!
 *   <div class="ns-One ns-Two">
 * }}
 *
 * @example
 * <div class="{{ns "Component u-util" prefix="foo-"}}">
 * {{!
 *   <div class="foo-Component foo-u-util">
 * }}
 */
function ns(Handlebars, options) {
  var defaults = { prefix: 'ns-' };

  return function (str, context) {
    var _Object$assign = Object.assign(defaults, options, context.hash),
        prefix = _Object$assign.prefix;

    var transform = pipe(trim, split(/[\s\t\n\r]+/gm), map(concat(prefix)), join(' '));

    var result = transform(str.toString());

    return new Handlebars.SafeString(result);
  };
}

exports.default = {
  ns: ns
};